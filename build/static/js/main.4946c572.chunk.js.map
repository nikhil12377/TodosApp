{"version":3,"sources":["actions/index.js","components/Kanban.jsx","components/Navbar.jsx","components/TodoItem.jsx","components/TodosList.jsx","App.js","reducers/todoReducer.js","reducers/index.js","store.js","index.js"],"names":["toggleTodo","id","value","type","payload","Kanban","todos","useSelector","state","length","JSON","parse","localStorage","getItem","dispatch","useDispatch","useEffect","createdOrUpdatedTodos","inProgressTodos","completedTodos","map","item","status","push","kanbanColumns","uuid","name","items","useState","columns","setColumns","className","onDragEnd","result","console","log","destination","source","droppableId","sourceColumn","destColumn","sourceItems","destItems","splice","index","removed","column","copiedItems","Object","entries","style","margin","provided","snapshot","droppableProps","ref","innerRef","background","isDraggingOver","padding","width","minHeight","draggableId","draggableProps","dragHandleProps","userSelect","backgroundColor","isDragging","color","title","placeholder","Navbar","to","TodoItem","todo","capitalizeFirstLetter","string","charAt","toUpperCase","slice","setTitle","desc","setDesc","isEditable","setIsEditable","onChange","e","target","onClick","newTodo","alert","updated_at","Date","now","toString","due_date","TodosList","dueDate","setDueDate","today","minDate","selected","date","addTodo","marginTop","App","setItem","stringify","exact","path","todoReducer","action","created_at","newState","newAddTodos","newDeleteTodos","filter","newUpdateTodos","find","newToggleTodos","rootReducer","combineReducers","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4946c572.chunk.js","sourcesContent":["/**\n * This function send the object to todoReducer,\n * To add a new todo.\n * @param {string} title represents title of todo\n * @param {string} desc represents description of todo\n * @param {string} dueDate represents due date of todo\n * @returns {Object} an object with title, desc and dueDate\n */\nconst addTodo = (title, desc, dueDate) => {\n    return {\n        type: \"ADD_TODO\",\n        payload: { title, desc, dueDate }\n    };\n};\n\n/**\n * This function send the object to todoReducer,\n * To Delete the todo.\n * @param {string} id represents id of todo\n * @returns {Object} an object with id\n */\nconst deleteTodo = (id) => {\n    return {\n        type: \"DELETE_TODO\",\n        payload: id\n    };\n};\n\n\n/**\n * This function send the object to todoReducer,\n * To Update the todo\n * @param {Object} newTodo \n * @param {string} id represents id of todo\n * @returns {Object} an object with newTodo and id\n */\nconst updateTodo = (newTodo, id) => {\n    return {\n        type: \"UPDATE_TODO\",\n        payload: { newTodo: newTodo, id: id }\n    };\n};\n\n/**\n * This function send the object to todoReducer,\n * To change the status of todo\n * @param {string} id represents id of todo\n * @param {string} value represents status of todo\n * @returns  {Object} an object with id and value\n */\nconst toggleTodo = (id, value) => {\n    return {\n        type: \"TOGGLE_TODO\",\n        payload: { id, value }\n    };\n};\n\n/**\n * This function send the object to todoReducer,\n * To load the todo from localstorage\n * @returns {Object}\n */\nconst loadTodo = () => {\n    return {\n        type: \"LOAD_TODO\",\n    };\n};\n\nexport { addTodo, deleteTodo, updateTodo, toggleTodo, loadTodo };\n","import React, { useEffect, useState } from \"react\";\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\nimport { v4 as uuid } from \"uuid\";\nimport { loadTodo, toggleTodo } from \"../actions\";\n\n/**\n * This function gets executed when a todo gets dragged\n * and placed on any container\n * @param {Object} result\n * @param {Object} columns\n * @param {Function} setColumns\n * @param {Function} dispatch\n * @returns\n */\nconst onDragEnd = (result, columns, setColumns, dispatch) => {\n  console.log(typeof setColumns);\n  if (!result.destination) return;\n  const { source, destination } = result;\n  if (source.droppableId !== destination.droppableId) {\n    const sourceColumn = columns[source.droppableId];\n    const destColumn = columns[destination.droppableId];\n    const sourceItems = [...sourceColumn.items];\n    const destItems = [...destColumn.items];\n    const [removed] = sourceItems.splice(source.index, 1);\n    dispatch(toggleTodo(removed.id, destColumn.status));\n    destItems.splice(destination.index, 0, removed);\n    setColumns({\n      ...columns,\n      [source.droppableId]: {\n        ...sourceColumn,\n        items: sourceItems,\n      },\n      [destination.droppableId]: {\n        ...destColumn,\n        items: destItems,\n      },\n    });\n  } else {\n    const column = columns[source.droppableId];\n    const copiedItems = [...column.items];\n    const [removed] = copiedItems.splice(source.index, 1);\n    copiedItems.splice(destination.index, 0, removed);\n    setColumns({\n      ...columns,\n      [source.droppableId]: {\n        ...column,\n        items: copiedItems,\n      },\n    });\n  }\n};\n\nexport default function Kanban() {\n  let todos = useSelector((state) => state.todos);\n  if (todos.length === 0) {\n    todos = JSON.parse(localStorage.getItem(\"todos\"));\n  }\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(loadTodo());\n  }, []);\n\n  var createdOrUpdatedTodos = [];\n  var inProgressTodos = [];\n  var completedTodos = [];\n\n  useEffect(() => {\n    if (todos !== null) {\n      todos.map((item) => {\n        return item.status === \"Created\" || item.status === \"Updated\"\n          ? createdOrUpdatedTodos.push(item)\n          : item.status === \"In_Progress\"\n          ? inProgressTodos.push(item)\n          : completedTodos.push(item);\n      });\n    }\n  }, [todos]);\n\n  const kanbanColumns = {\n    [uuid()]: {\n      name: \"Todos\",\n      status: \"Created\",\n      items: createdOrUpdatedTodos,\n    },\n    [uuid()]: {\n      name: \"In Progress\",\n      status: \"In_Progress\",\n      items: inProgressTodos,\n    },\n    [uuid()]: {\n      name: \"Completed\",\n      status: \"Completed\",\n      items: completedTodos,\n    },\n  };\n\n  const [columns, setColumns] = useState(kanbanColumns);\n  return (\n    <div className=\"kanban\">\n      {todos !== null ? (\n        todos.length !== 0 ? (\n          <DragDropContext\n            onDragEnd={(result) =>\n              onDragEnd(result, columns, setColumns, dispatch)\n            }\n          >\n            {Object.entries(columns).map(([id, column], index) => {\n              return (\n                <div key={id} className=\"droppable-container\">\n                  <h2>{column.name}</h2>\n                  <div style={{ margin: 8 }}>\n                    <Droppable key={id} droppableId={id}>\n                      {(provided, snapshot) => {\n                        return (\n                          <div\n                            {...provided.droppableProps}\n                            ref={provided.innerRef}\n                            style={{\n                              background: snapshot.isDraggingOver\n                                ? \"lightblue\"\n                                : \"lightgrey\",\n                              padding: 4,\n                              width: 250,\n                              minHeight: 500,\n                            }}\n                          >\n                            {column.items.map((item, index) => {\n                              return (\n                                <Draggable\n                                  key={item.id}\n                                  draggableId={item.id}\n                                  index={index}\n                                >\n                                  {(provided, snapshot) => {\n                                    return (\n                                      <div\n                                        ref={provided.innerRef}\n                                        {...provided.draggableProps}\n                                        {...provided.dragHandleProps}\n                                        style={{\n                                          userSelect: \"none\",\n                                          padding: 16,\n                                          margin: \"0 0 8px 0\",\n                                          minHeight: \"50px\",\n                                          backgroundColor: snapshot.isDragging\n                                            ? \"rgb(17, 24, 39)\"\n                                            : \"rgb(55, 65, 81)\",\n                                          color: \"white\",\n                                          ...provided.draggableProps.style,\n                                        }}\n                                      >\n                                        {item.title}\n                                      </div>\n                                    );\n                                  }}\n                                </Draggable>\n                              );\n                            })}\n                            {provided.placeholder}\n                          </div>\n                        );\n                      }}\n                    </Droppable>\n                  </div>\n                </div>\n              );\n            })}\n          </DragDropContext>\n        ) : (\n          <h1>Add Todos to use kanban</h1>\n        )\n      ) : (\n        <h1>Add Todos to use kanban</h1>\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Navbar() {\n  return (\n    <nav className=\"flex justify-center flex-wrap bg-black p-2 mb-6 sticky top-0 z-50\">\n      <div className=\"flex items-center flex-shrink-0 text-white mr-6\">\n        <Link\n          to=\"/TodosApp\"\n          className=\"float-left w-full mr-52 text-center text-xl tracking-tight\"\n        >\n          Todos\n        </Link>\n      </div>\n\n      <div>\n        <Link\n          to=\"/kanban\"\n          className=\"inline-block text-lg text-right px-4 py-2 text-white border-white mt-4 lg:mt-0\"\n        >\n          Kanban\n        </Link>\n      </div>\n    </nav>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { deleteTodo, toggleTodo, updateTodo } from \"../actions\";\n\nexport default function TodoItem({ todo }) {\n  /**\n   * This function capitalize the first word of give string\n   * @param {string} string\n   * @returns {string}\n   */\n  function capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  }\n\n  const [title, setTitle] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n  const [isEditable, setIsEditable] = useState(false);\n  const dispatch = useDispatch();\n  return (\n    <div className=\"todo flex justify-between w-full \">\n      {isEditable ? (\n        <div className=\"editable-inputs\">\n          <input\n            placeholder=\"Title\"\n            className=\"bg-gray-200 border-2 border-gray-200 rounded focus:bg-white\"\n            type=\"text\"\n            onChange={(e) => setTitle(capitalizeFirstLetter(e.target.value))}\n          />\n          <input\n            placeholder=\"Desc\"\n            className=\"bg-gray-200 border-2 border-gray-200 rounded focus:bg-white\"\n            type=\"text\"\n            onChange={(e) => setDesc(capitalizeFirstLetter(e.target.value))}\n          />\n        </div>\n      ) : (\n        <h4\n          className={\n            todo.status === \"Completed\"\n              ? \"completed contents text-lg overflow-hidden whitespace-nowrap overflow-ellipsis\"\n              : \"contents text-lg\"\n          }\n        >\n          {todo.title}\n        </h4>\n      )}\n      <div className=\"flex flex-row todo-actions\">\n        {isEditable ? (\n          <span\n            className=\"material-icons md-32 \"\n            onClick={() => {\n              console.log(todo);\n              if (title === \"\" || desc === \"\") {\n                alert(\"Title or Description shouldn't be blank\");\n              } else {\n                dispatch(\n                  updateTodo(\n                    {\n                      id: todo.id,\n                      title: title,\n                      desc: desc,\n                      status: \"Updated\",\n                      updated_at: Date(Date.now()).toString(),\n                      due_date: todo.due_date,\n                    },\n                    todo.id\n                  )\n                );\n                setIsEditable(!isEditable);\n              }\n            }}\n          >\n            done\n          </span>\n        ) : (\n          <span\n            onClick={() => {\n              setIsEditable(!isEditable);\n            }}\n            className=\"material-icons\"\n          >\n            edit\n          </span>\n        )}\n        <span\n          className=\"material-icons\"\n          onClick={() => {\n            dispatch(deleteTodo(todo.id));\n          }}\n        >\n          delete\n        </span>\n        <select\n          className=\"form-select block relative bg-gray-700 hover:bg-gray-900\"\n          onChange={(e) => {\n            dispatch(toggleTodo(todo.id, e.target.value));\n          }}\n          value={todo.status}\n        >\n          <option value=\"Created\">\n            {todo.status === \"Updated\" ? \"Updated\" : \"Created\"}\n          </option>\n          <option value=\"In_Progress\">In Progress</option>\n          <option value=\"Completed\">Completed</option>\n        </select>\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { addTodo } from \"../actions\";\nimport TodoItem from \"./TodoItem\";\nimport DatePicker from \"react-datepicker\";\n\nexport default function TodosList() {\n  /**\n   * This function capitalize the first word of give string\n   * @param {string} string\n   * @returns {string}\n   */\n  function capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  }\n\n  const todos = useSelector((state) => state.todos);\n  const dispatch = useDispatch();\n  const [title, setTitle] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n  const [dueDate, setDueDate] = useState(new Date());\n  const today = new Date();\n  console.log(todos);\n  return (\n    <div className=\"container flex flex-col items-center m-10\">\n      <div className=\"parent-container bg-white \">\n        <div className=\"addtodo-container p-4\">\n          <input\n            className=\"title bg-gray-200 border-2 border-gray-200 rounded text-gray-700 leading-tight focus:bg-white \"\n            type=\"text\"\n            onChange={(e) => {\n              setTitle(e.target.value);\n            }}\n            value={title}\n            placeholder=\"Todo title\"\n          />\n          <input\n            className=\"desc bg-gray-200 border-2 border-gray-200 rounded text-gray-700 leading-tight  focus:bg-white \"\n            type=\"text\"\n            placeholder=\"Description\"\n            onChange={(e) => {\n              setDesc(e.target.value);\n            }}\n            value={desc}\n          />\n          <div className=\"flex flex-row justify-center py-3\">\n            <label className=\"w-20 flex flex-wrap content-center\">\n              Due Date:\n            </label>\n            <DatePicker\n              minDate={today}\n              selected={dueDate}\n              onChange={(date) => setDueDate(date)}\n            />\n          </div>\n          <button\n            className=\"bg-gray-700 hover:bg-gray-900 text-white font-bold py-2 px-4 rounded-full\"\n            onClick={() => {\n              if (title === \"\" || desc === \"\") {\n                alert(\"Title or Description shouldn't be blank\");\n              } else {\n                dispatch(\n                  addTodo(\n                    capitalizeFirstLetter(title),\n                    capitalizeFirstLetter(desc),\n                    dueDate\n                  )\n                );\n                setTitle(\"\");\n                setDesc(\"\");\n                setDueDate(today);\n              }\n            }}\n          >\n            Add Todo\n          </button>\n        </div>\n      </div>\n      <div className=\"todos float-left clear-left\">\n        {todos !== null ? (\n          todos.length !== 0 ? (\n            todos.map((todo, index) => {\n              return <TodoItem key={index} todo={todo} />;\n            })\n          ) : (\n            <h1 style={{ marginTop: \"50px\" }}>No todos</h1>\n          )\n        ) : (\n          <h1 style={{ marginTop: \"50px\" }}>No todos</h1>\n        )}\n      </div>\n    </div>\n  );\n}\n","import './App.css';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport Kanban from './components/Kanban';\nimport Navbar from './components/Navbar';\nimport TodosList from './components/TodosList';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport { useSelector } from 'react-redux';\nimport { useEffect } from 'react';\n\nfunction App() {\n  const todos = useSelector(state => state.todos);\n\n  useEffect(() => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  }, [todos])\n  return (\n    <div className=\"App\">\n      <Router>\n        <Navbar />\n        <Switch>\n          <Route exact path={[\"/TodosApp\", \"/\"]}>\n            <TodosList />\n          </Route>\n          <Route exact path=\"/kanban\">\n            <Kanban />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import { v4 as uuid } from \"uuid\";\nconst todoReducer = (state = [], action) => {\n    switch (action.type) {\n        case \"ADD_TODO\":\n            const date = Date(Date.now());\n            const newTodo = {\n                id: uuid(),\n                title: action.payload.title,\n                desc: action.payload.desc,\n                status: \"Created\",\n                created_at: date.toString(),\n                due_date: action.payload.dueDate.toString()\n            };\n            if (state === null) {\n                localStorage.setItem(\"todos\", JSON.stringify(newTodo));\n                const newState = [newTodo]\n                return newState;\n            }\n            else {\n                const newAddTodos = [...state, newTodo];\n                localStorage.setItem(\"todos\", JSON.stringify(newAddTodos));\n                return newAddTodos;\n            }\n\n        case \"DELETE_TODO\":\n            const newDeleteTodos = state.filter((todo) => todo.id !== action.payload);\n            localStorage.setItem(\"todos\", JSON.stringify(newDeleteTodos));\n            return newDeleteTodos;\n\n        case \"UPDATE_TODO\":\n            const newUpdateTodos = state.map((todo) => todo.id === action.payload.id ? action.payload.newTodo : todo);\n            localStorage.setItem(\"todos\", JSON.stringify(newUpdateTodos));\n            return newUpdateTodos;\n\n        case \"TOGGLE_TODO\":\n            const todo = state.find((item) => item.id === action.payload.id);\n            if (todo) {\n                todo.status = action.payload.value;\n            }\n            const newToggleTodos = [...state]\n            localStorage.setItem(\"todos\", JSON.stringify(newToggleTodos));\n            return newToggleTodos;\n\n        case \"LOAD_TODO\":\n            return JSON.parse(localStorage.getItem(\"todos\"));\n\n        default:\n            return state;\n    }\n}\n\nexport default todoReducer;","import { combineReducers } from 'redux';\nimport todoReducer from './todoReducer';\n\nconst rootReducer = combineReducers({\n    todos: todoReducer,\n});\n\nexport default rootReducer;","import { createStore } from \"redux\";\nimport rootReducer from './reducers/index';\n\nconst store = createStore(rootReducer);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport store from './store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}